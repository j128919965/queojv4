syntax = "v1"

type AskByIdReq struct {
    Id uint64 `form:"id"`
}

type AskDetail struct {
    Id       uint64 `json:"id"`
    Uid      uint64 `json:"uid"`
    Time     int64 `json:"time"`
    Nickname string `json:"nickname"`
    Title    string `json:"title"`
    Content  string `json:"content"`
}

type AskAddReq struct {
    Nickname string `json:"nickname"`
    Title    string `json:"title"`
    Content  string `json:"content"`
}

type AskSummary struct {
    Id       uint64 `json:"id"`
    Uid      uint64 `json:"uid"`
    Time     int64 `json:"time"`
    Nickname string `json:"nickname"`
    Title    string `json:"title"`
}

type ReplyByIdReq struct {
    Id uint64 `form:"id"`
}

type ReplyAddReq struct {
    AskId    uint64 `json:"askId"`
    Nickname string `json:"nickname"`
    Content  string `json:"content"`
}

type ReplyDetail struct {
    Id       uint64 `json:"id"`
    AskId    uint64 `json:"askId"`
    Uid      uint64 `json:"uid"`
    Time     int64 `json:"time"`
    Nickname string `json:"nickname"`
    Content  string `json:"content"`
}

type AskList struct {
    Asks []*AskSummary `json:"asks"`
}

type ReplyList struct {
    Replies []*ReplyDetail `json:"replies"`
}

@server (
    group : ask
)
service queoj-api {
    @handler GetAllAsk
    get /ask/all returns (AskList)

    @handler GetAskById
    get /ask (AskByIdReq) returns (AskDetail)

    @handler GetAskReplies
    get /ask/replies (AskByIdReq) returns (ReplyList)
}

@server (
    group : ask
    jwt : Auth
)
service queoj-api {
    @handler AddAsk
    post /ask (AskAddReq)

    @handler AddReply
    post /ask/replies (ReplyAddReq)

    @handler EditAsk
    post /ask/adm/edit (AskDetail)

    @handler EditReply
    post /ask/adm/replies/edit (ReplyDetail)

    @handler RemoveAsk
    post /ask/amd/rem  (AskByIdReq)

    @handler RemoveReply
    post /ask/adm/replies/rem (AskByIdReq)

}