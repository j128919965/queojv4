// Code generated by goctl. DO NOT EDIT!
// Source: message.proto

package server

import (
	"context"

	"queoj/service/message/internal/logic"
	"queoj/service/message/internal/svc"
	"queoj/service/message/message"
)

type MessageServer struct {
	svcCtx *svc.ServiceContext
}

func NewMessageServer(svcCtx *svc.ServiceContext) *MessageServer {
	return &MessageServer{
		svcCtx: svcCtx,
	}
}

func (s *MessageServer) GetMessagePage(ctx context.Context, in *message.MessageReqByReceiver) (*message.MessagePage, error) {
	l := logic.NewGetMessagePageLogic(ctx, s.svcCtx)
	return l.GetMessagePage(in)
}

func (s *MessageServer) ReadMsg(ctx context.Context, in *message.MessageByIdReq) (*message.Empty, error) {
	l := logic.NewReadMsgLogic(ctx, s.svcCtx)
	return l.ReadMsg(in)
}

func (s *MessageServer) ReadAllMsg(ctx context.Context, in *message.MessageByUserIdReq) (*message.Empty, error) {
	l := logic.NewReadAllMsgLogic(ctx, s.svcCtx)
	return l.ReadAllMsg(in)
}

func (s *MessageServer) GetMessageById(ctx context.Context, in *message.MessageByIdReq) (*message.MessageDto, error) {
	l := logic.NewGetMessageByIdLogic(ctx, s.svcCtx)
	return l.GetMessageById(in)
}

func (s *MessageServer) SendMessage(ctx context.Context, in *message.MessageDto) (*message.Empty, error) {
	l := logic.NewSendMessageLogic(ctx, s.svcCtx)
	return l.SendMessage(in)
}

func (s *MessageServer) DeleteMsg(ctx context.Context, in *message.MessageByIdReq) (*message.Empty, error) {
	l := logic.NewDeleteMsgLogic(ctx, s.svcCtx)
	return l.DeleteMsg(in)
}

func (s *MessageServer) DeleteAllMsg(ctx context.Context, in *message.MessageByUserIdReq) (*message.Empty, error) {
	l := logic.NewDeleteAllMsgLogic(ctx, s.svcCtx)
	return l.DeleteAllMsg(in)
}
