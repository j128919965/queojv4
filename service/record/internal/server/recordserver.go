// Code generated by goctl. DO NOT EDIT!
// Source: record.proto

package server

import (
	"context"

	"queoj/service/record/internal/logic"
	"queoj/service/record/internal/svc"
	"queoj/service/record/record"
)

type RecordServer struct {
	svcCtx *svc.ServiceContext
}

func NewRecordServer(svcCtx *svc.ServiceContext) *RecordServer {
	return &RecordServer{
		svcCtx: svcCtx,
	}
}

func (s *RecordServer) GetRecordByUser(ctx context.Context, in *record.RecordByUserReq) (*record.RecordList, error) {
	l := logic.NewGetRecordByUserLogic(ctx, s.svcCtx)
	return l.GetRecordByUser(in)
}

func (s *RecordServer) GetRecordById(ctx context.Context, in *record.RecordByIdReq) (*record.RecordDetail, error) {
	l := logic.NewGetRecordByIdLogic(ctx, s.svcCtx)
	return l.GetRecordById(in)
}

func (s *RecordServer) AddRecord(ctx context.Context, in *record.RecordDetail) (*record.RecordByIdReq, error) {
	l := logic.NewAddRecordLogic(ctx, s.svcCtx)
	return l.AddRecord(in)
}

func (s *RecordServer) GetRecordStatus(ctx context.Context, in *record.RecordByIdReq) (*record.RecordState, error) {
	l := logic.NewGetRecordStatusLogic(ctx, s.svcCtx)
	return l.GetRecordStatus(in)
}

func (s *RecordServer) GetUserSuccessStatistic(ctx context.Context, in *record.RecordByUserReq) (*record.SuccessStatistic, error) {
	l := logic.NewGetUserSuccessStatisticLogic(ctx, s.svcCtx)
	return l.GetUserSuccessStatistic(in)
}
