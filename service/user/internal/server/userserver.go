// Code generated by goctl. DO NOT EDIT!
// Source: user.proto

package server

import (
	"context"

	"queoj/service/user/internal/logic"
	"queoj/service/user/internal/svc"
	"queoj/service/user/user"
)

type UserServer struct {
	svcCtx *svc.ServiceContext
}

func NewUserServer(svcCtx *svc.ServiceContext) *UserServer {
	return &UserServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServer) LoginByPassword(ctx context.Context, in *user.LoginByPasswordReq) (*user.LoginResult, error) {
	l := logic.NewLoginByPasswordLogic(ctx, s.svcCtx)
	return l.LoginByPassword(in)
}

func (s *UserServer) LoginByCode(ctx context.Context, in *user.LoginByCodeReq) (*user.LoginResult, error) {
	l := logic.NewLoginByCodeLogic(ctx, s.svcCtx)
	return l.LoginByCode(in)
}

func (s *UserServer) AddCoinOrPoint(ctx context.Context, in *user.AddCoinOrPointReq) (*user.Result, error) {
	l := logic.NewAddCoinOrPointLogic(ctx, s.svcCtx)
	return l.AddCoinOrPoint(in)
}

func (s *UserServer) ChangeUserInfo(ctx context.Context, in *user.ChangeUserInfoReq) (*user.Result, error) {
	l := logic.NewChangeUserInfoLogic(ctx, s.svcCtx)
	return l.ChangeUserInfo(in)
}

func (s *UserServer) ChangePassword(ctx context.Context, in *user.ChangePasswordReq) (*user.Result, error) {
	l := logic.NewChangePasswordLogic(ctx, s.svcCtx)
	return l.ChangePassword(in)
}

func (s *UserServer) GetUserInfo(ctx context.Context, in *user.UserInfoReq) (*user.UserInfo, error) {
	l := logic.NewGetUserInfoLogic(ctx, s.svcCtx)
	return l.GetUserInfo(in)
}

func (s *UserServer) SendVerifyEmail(ctx context.Context, in *user.UserInfoReqByEmail) (*user.Result, error) {
	l := logic.NewSendVerifyEmailLogic(ctx, s.svcCtx)
	return l.SendVerifyEmail(in)
}

func (s *UserServer) RefreshToken(ctx context.Context, in *user.RefreshReq) (*user.Tokens, error) {
	l := logic.NewRefreshTokenLogic(ctx, s.svcCtx)
	return l.RefreshToken(in)
}
